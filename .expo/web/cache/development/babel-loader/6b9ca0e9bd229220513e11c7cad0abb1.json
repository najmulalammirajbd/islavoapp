{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\najmu\\\\Downloads\\\\customtabbar-main\\\\customtabbar-main\\\\App.js\";\nimport { StatusBar } from 'expo-status-bar';\nimport React from 'react';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Live from \"./src/components/Live/Live\";\nimport Podcast from \"./src/components/Podcast/Podcast\";\nimport Video from \"./src/components/Video/Video\";\nimport plus from \"./assets/plus.png\";\nimport { FontAwesome5 } from '@expo/vector-icons';\nimport { useRef } from 'react';\nvar Tab = createBottomTabNavigator();\nexport default function App() {\n  var _this = this;\n\n  var tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Tab.Navigator, {\n    tabBarOptions: {\n      showLabel: false,\n      style: {\n        backgroundColor: 'white',\n        position: 'absolute',\n        bottom: 40,\n        marginHorizontal: 20,\n        height: 60,\n        borderRadius: 10,\n        shadowColor: '#000',\n        shadowOpacity: 0.06,\n        shadowOffset: {\n          width: 10,\n          height: 10\n        },\n        paddingHorizontal: 20\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(Tab.Screen, {\n    name: \"Home\",\n    component: Live,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref) {\n        var focused = _ref.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"music\",\n          size: 20,\n          color: focused ? '#1dc1bc' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref2) {\n      var navigation = _ref2.navigation,\n          route = _ref2.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: 0,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Search\",\n    component: Podcast,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref3) {\n        var focused = _ref3.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"microphone\",\n          size: 20,\n          color: focused ? '#1dc1bc' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref4) {\n      var navigation = _ref4.navigation,\n          route = _ref4.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth(),\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"ActionButton\",\n    component: EmptyScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref5) {\n        var focused = _ref5.focused;\n        return React.createElement(TouchableOpacity, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }\n        }, React.createElement(View, {\n          style: {\n            width: 55,\n            height: 55,\n            backgroundColor: '#1dc1bc',\n            borderRadius: 30,\n            justifyContent: 'center',\n            alignItems: 'center',\n            marginBottom: Platform.OS == \"android\" ? 50 : 30\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: plus,\n          style: {\n            width: 30,\n            height: 40,\n            tintColor: 'white'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }\n        })));\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Notifications\",\n    component: Video,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref6) {\n        var focused = _ref6.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"video\",\n          size: 20,\n          color: focused ? '#1dc1bc' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref7) {\n      var navigation = _ref7.navigation,\n          route = _ref7.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 3,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }), React.createElement(Tab.Screen, {\n    name: \"Settings\",\n    component: SettingsScreen,\n    options: {\n      tabBarIcon: function tabBarIcon(_ref8) {\n        var focused = _ref8.focused;\n        return React.createElement(View, {\n          style: {\n            position: 'absolute',\n            top: 20\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }\n        }, React.createElement(FontAwesome5, {\n          name: \"\",\n          size: 20,\n          color: focused ? '#1dc1bc' : 'gray',\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    listeners: function listeners(_ref9) {\n      var navigation = _ref9.navigation,\n          route = _ref9.route;\n      return {\n        tabPress: function tabPress(e) {\n          Animated.spring(tabOffsetValue, {\n            toValue: getWidth() * 4,\n            useNativeDriver: true\n          }).start();\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 9\n    }\n  })), React.createElement(Animated.View, {\n    style: {\n      width: getWidth() - 20,\n      height: 2,\n      backgroundColor: '#1dc1bc',\n      position: 'absolute',\n      bottom: 98,\n      left: 50,\n      borderRadius: 20,\n      transform: [{\n        translateX: tabOffsetValue\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction getWidth() {\n  var width = Dimensions.get(\"window\").width;\n  width = width - 80;\n  return width / 5;\n}\n\nfunction EmptyScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 5\n    }\n  });\n}\n\nfunction SettingsScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, \"Settings!\"));\n}\n\nfunction HomeScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }\n  }, \"Home!\"));\n}\n\nfunction NotificationScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }\n  }, \"Notifications!\"));\n}\n\nfunction SearchScreen() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }\n  }, \"Search!\"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});","map":{"version":3,"sources":["C:/Users/najmu/Downloads/customtabbar-main/customtabbar-main/App.js"],"names":["StatusBar","React","NavigationContainer","createBottomTabNavigator","Live","Podcast","Video","plus","FontAwesome5","useRef","Tab","App","tabOffsetValue","Animated","Value","current","showLabel","style","backgroundColor","position","bottom","marginHorizontal","height","borderRadius","shadowColor","shadowOpacity","shadowOffset","width","paddingHorizontal","tabBarIcon","focused","top","navigation","route","tabPress","e","spring","toValue","useNativeDriver","start","getWidth","EmptyScreen","justifyContent","alignItems","marginBottom","Platform","OS","tintColor","SettingsScreen","left","transform","translateX","Dimensions","get","flex","HomeScreen","NotificationScreen","SearchScreen","styles","StyleSheet","create","container"],"mappings":"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","sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React from 'react';\n// import registerNNPushToken from 'native-notify';\nimport { Animated, Dimensions, Image, Platform, StyleSheet, Text, TouchableOpacity, View } from 'react-native';\nimport 'react-native-gesture-handler';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport Live from './src/components/Live/Live';\nimport Podcast from './src/components/Podcast/Podcast';\nimport Video from './src/components/Video/Video';\n\n// Plus...\nimport plus from './assets/plus.png'\n\n// Font Awesome Icons...\nimport { FontAwesome5 } from '@expo/vector-icons'\nimport { useRef } from 'react';\n\nconst Tab = createBottomTabNavigator();\n\n// Hiding Tab Names...\nexport default function App() {\n  // registerNNPushToken(2145, '8dN0xiRImrtsm1vbCKOilr');\n  // Animated Tab Indicator...\n  const tabOffsetValue = useRef(new Animated.Value(0)).current;\n  return (\n    <NavigationContainer>\n      <Tab.Navigator tabBarOptions={{\n        showLabel: false,\n        // Floating Tab Bar...\n        style: {\n          backgroundColor: 'white',\n          position: 'absolute',\n          bottom: 40,\n          marginHorizontal: 20,\n          // Max Height...\n          height: 60,\n          borderRadius: 10,\n          // Shadow...\n          shadowColor: '#000',\n          shadowOpacity: 0.06,\n          shadowOffset: {\n            width: 10,\n            height: 10\n          },\n          paddingHorizontal: 20,\n        }\n      }}>\n\n        {\n          // Tab Screens....\n\n          // Tab ICons....\n        }\n        <Tab.Screen name={\"Home\"} component={Live} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"music\"\n                size={20}\n                color={focused ? '#1dc1bc' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: 0,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n        <Tab.Screen name={\"Search\"} component={Podcast} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"microphone\"\n                size={20}\n                color={focused ? '#1dc1bc' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth(),\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n\n        {\n\n          // Extra Tab Screen For Action Button..\n        }\n\n        <Tab.Screen name={\"ActionButton\"} component={EmptyScreen} options={{\n          tabBarIcon: ({ focused }) => (\n\n            <TouchableOpacity>\n              <View style={{\n                width: 55,\n                height: 55,\n                backgroundColor: '#1dc1bc',\n                borderRadius: 30,\n                justifyContent: 'center',\n                alignItems: 'center',\n                marginBottom: Platform.OS == \"android\" ? 50 : 30\n              }}>\n                <Image source={plus} style={{\n                  width: 30,\n                  height: 40,\n                  tintColor: 'white',\n                }}></Image>\n              </View>\n            </TouchableOpacity>\n          )\n        }}></Tab.Screen>\n\n        <Tab.Screen name={\"Notifications\"} component={Video} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"video\"\n                size={20}\n                color={focused ? '#1dc1bc' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth() * 3,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n        <Tab.Screen name={\"Settings\"} component={SettingsScreen} options={{\n          tabBarIcon: ({ focused }) => (\n            <View style={{\n              // centring Tab Button...\n              position: 'absolute',\n              top: 20\n            }}>\n              <FontAwesome5\n                name=\"\"\n                size={20}\n                color={focused ? '#1dc1bc' : 'gray'}\n              ></FontAwesome5>\n            </View>\n          )\n        }} listeners={({ navigation, route }) => ({\n          // Onpress Update....\n          tabPress: e => {\n            Animated.spring(tabOffsetValue, {\n              toValue: getWidth() * 4,\n              useNativeDriver: true\n            }).start();\n          }\n        })}></Tab.Screen>\n\n      </Tab.Navigator>\n\n      <Animated.View style={{\n        width: getWidth() - 20,\n        height: 2,\n        backgroundColor: '#1dc1bc',\n        position: 'absolute',\n        bottom: 98,\n        // Horizontal Padding = 20...\n        left: 50,\n        borderRadius: 20,\n        transform: [\n          { translateX: tabOffsetValue }\n        ]\n      }}>\n\n      </Animated.View>\n    </NavigationContainer>\n  );\n}\n\nfunction getWidth() {\n  let width = Dimensions.get(\"window\").width\n\n  // Horizontal Padding = 20...\n  width = width - 80\n\n  // Total five Tabs...\n  return width / 5\n}\n\nfunction EmptyScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n    </View>\n  );\n}\n\nfunction SettingsScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Settings!</Text>\n    </View>\n  );\n}\n\nfunction HomeScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Home!</Text>\n    </View>\n  );\n}\n\nfunction NotificationScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Notifications!</Text>\n    </View>\n  );\n}\n\nfunction SearchScreen() {\n  return (\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\n      <Text>Search!</Text>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n});\n"]},"metadata":{},"sourceType":"module"}